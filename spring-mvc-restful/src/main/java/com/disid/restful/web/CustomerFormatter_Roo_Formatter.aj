// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.restful.web;

import com.disid.restful.model.Customer;
import com.disid.restful.service.api.CustomerService;
import com.disid.restful.web.CustomerFormatter;
import java.text.ParseException;
import java.util.Locale;
import org.springframework.core.convert.ConversionService;
import org.springframework.format.Formatter;
import org.springframework.util.StringUtils;

privileged aspect CustomerFormatter_Roo_Formatter {
    
    declare parents: CustomerFormatter implements Formatter<Customer>;
    
    public CustomerService CustomerFormatter.customerService;
    
    public ConversionService CustomerFormatter.conversionService;
    
    public CustomerFormatter.new(CustomerService customerService, ConversionService conversionService) {
        this.customerService = customerService;
        this.conversionService = conversionService;
    }

    public Customer CustomerFormatter.parse(String text, Locale locale) throws ParseException {
        if (text == null || !StringUtils.hasText(text)) {
            return null;
        }
        Long id = conversionService.convert(text, Long.class);
        return customerService.findOne(id);
    }
    
    public String CustomerFormatter.print(Customer customer, Locale locale) {
        return customer == null ? null : new StringBuilder().append(customer.getFirstName()).append(" - ").append(customer.getLastName()).toString();
    }
    
}
