// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.restful.web;

import com.disid.restful.model.CustomerOrder;
import com.disid.restful.service.api.CustomerOrderService;
import com.disid.restful.web.CustomerOrderFormatter;
import java.text.ParseException;
import java.util.Locale;
import org.springframework.core.convert.ConversionService;
import org.springframework.format.Formatter;
import org.springframework.util.StringUtils;

privileged aspect CustomerOrderFormatter_Roo_Formatter {
    
    declare parents: CustomerOrderFormatter implements Formatter<CustomerOrder>;
    
    public CustomerOrderService CustomerOrderFormatter.customerOrderService;
    
    public ConversionService CustomerOrderFormatter.conversionService;
    
    public CustomerOrderFormatter.new(CustomerOrderService customerOrderService, ConversionService conversionService) {
        this.customerOrderService = customerOrderService;
        this.conversionService = conversionService;
    }

    public CustomerOrder CustomerOrderFormatter.parse(String text, Locale locale) throws ParseException {
        if (text == null || !StringUtils.hasText(text)) {
            return null;
        }
        Long id = conversionService.convert(text, Long.class);
        return customerOrderService.findOne(id);
    }
    
    public String CustomerOrderFormatter.print(CustomerOrder customerOrder, Locale locale) {
        return customerOrder == null ? null : new StringBuilder().append(customerOrder.getShipAddress()).toString();
    }
    
}
