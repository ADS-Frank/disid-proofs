// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.restful.service.impl;

import com.disid.restful.model.CustomerOrder;
import com.disid.restful.model.OrderDetail;
import com.disid.restful.model.Product;
import com.disid.restful.repository.GlobalSearch;
import com.disid.restful.repository.OrderDetailRepository;
import com.disid.restful.service.api.OrderDetailService;
import com.disid.restful.service.impl.OrderDetailServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect OrderDetailServiceImpl_Roo_Service_Impl {
    
    declare parents: OrderDetailServiceImpl implements OrderDetailService;
    
    declare @type: OrderDetailServiceImpl: @Service;
    
    declare @type: OrderDetailServiceImpl: @Transactional(readOnly = true);
    
    public OrderDetailRepository OrderDetailServiceImpl.orderDetailRepository;
    
    @Autowired
    public OrderDetailServiceImpl.new(OrderDetailRepository orderDetailRepository) {
        this.orderDetailRepository = orderDetailRepository;
    }

    @Transactional(readOnly = false)
    public OrderDetail OrderDetailServiceImpl.save(OrderDetail entity) {
        return orderDetailRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void OrderDetailServiceImpl.delete(Long id) {
         orderDetailRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<OrderDetail> OrderDetailServiceImpl.save(Iterable<OrderDetail> entities) {
        return orderDetailRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void OrderDetailServiceImpl.delete(Iterable<Long> ids) {
        List<OrderDetail> toDelete = orderDetailRepository.findAll(ids);
        orderDetailRepository.deleteInBatch(toDelete);
    }
    
    public List<OrderDetail> OrderDetailServiceImpl.findAll() {
        return orderDetailRepository.findAll();
    }
    
    public List<OrderDetail> OrderDetailServiceImpl.findAll(Iterable<Long> ids) {
        return orderDetailRepository.findAll(ids);
    }
    
    public OrderDetail OrderDetailServiceImpl.findOne(Long id) {
        return orderDetailRepository.findOne(id);
    }
    
    public long OrderDetailServiceImpl.count() {
        return orderDetailRepository.count();
    }
    
    public Page<OrderDetail> OrderDetailServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return orderDetailRepository.findAll(globalSearch, pageable);
    }
    
    public Long OrderDetailServiceImpl.countByCustomerOrderId(Long id) {
        return orderDetailRepository.countByCustomerOrderId(id);
    }
    
    public Long OrderDetailServiceImpl.countByProductId(Long id) {
        return orderDetailRepository.countByProductId(id);
    }
    
    public Page<OrderDetail> OrderDetailServiceImpl.findAllByCustomerOrder(CustomerOrder customerOrderField, GlobalSearch globalSearch, Pageable pageable) {
        return orderDetailRepository.findAllByCustomerOrder(customerOrderField, globalSearch, pageable);
    }
    
    public Page<OrderDetail> OrderDetailServiceImpl.findAllByProduct(Product productField, GlobalSearch globalSearch, Pageable pageable) {
        return orderDetailRepository.findAllByProduct(productField, globalSearch, pageable);
    }
    
}
