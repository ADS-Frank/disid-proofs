// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.restful.service.impl;

import com.disid.restful.model.Category;
import com.disid.restful.repository.GlobalSearch;
import com.disid.restful.service.api.CategoryService;
import com.disid.restful.service.impl.CategoryServiceImpl;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CategoryServiceImpl_Roo_Service_Impl {
    
    declare parents: CategoryServiceImpl implements CategoryService;
    
    declare @type: CategoryServiceImpl: @Service;
    
    declare @type: CategoryServiceImpl: @Transactional(readOnly = true);
    
    @Transactional(readOnly = false)
    public Category CategoryServiceImpl.save(Category entity) {
        return categoryRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void CategoryServiceImpl.delete(Long id) {
         categoryRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Category> CategoryServiceImpl.save(Iterable<Category> entities) {
        return categoryRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void CategoryServiceImpl.delete(Iterable<Long> ids) {
        List<Category> toDelete = categoryRepository.findAll(ids);
        categoryRepository.deleteInBatch(toDelete);
    }
    
    public List<Category> CategoryServiceImpl.findAll() {
        return categoryRepository.findAll();
    }
    
    public List<Category> CategoryServiceImpl.findAll(Iterable<Long> ids) {
        return categoryRepository.findAll(ids);
    }
    
    public Category CategoryServiceImpl.findOne(Long id) {
        return categoryRepository.findOne(id);
    }
    
    public long CategoryServiceImpl.count() {
        return categoryRepository.count();
    }
    
    public Page<Category> CategoryServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return categoryRepository.findAll(globalSearch, pageable);
    }
    
}
