package com.springsource.petclinic.integration;

import com.cdyne.wsf.ArrayOfWeatherDescription;
import com.cdyne.wsf.ForecastReturn;
import com.cdyne.wsf.Weather;
import com.cdyne.wsf.WeatherReturn;
import com.cdyne.wsf.WeatherSoap;

import org.springframework.stereotype.Service;

/**
 * = WeatherWebServiceEndpoint
 *
 * Implementation of the WheatherWebService interface. This implementation delegates
 * on the Java classes generated by the _cxf-codegen-plugin_ from the WSDL file
 * located on http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL.
 * 
 */
@Service
public class WeatherWebServiceEndpoint implements WeatherWebService {

  /**
   * Gets all information for each WeatherID.
   * 
   * Delegates on _getWeatherInformation_ operation defined on the
   * SOAP web service. 
   * 
   * @return ArrayOfWeatherDescription object that contains a list 
   * of all weather information objects identified by the WeatherID.
   */
  @Override
  public ArrayOfWeatherDescription getWeatherInformation() {
    Weather s = new Weather();
    WeatherSoap p = s.getWeatherSoap12();
    return p.getWeatherInformation();
  }
  
  /**
   * Allows you to get your City's Weather, which is updated hourly. 
   * U.S. Only
   * 
   * Delegates on _getCityWeatherByZIP_ operation defined on the
   * SOAP web service.
   * 
   * @param zip String with the City's ZIP code that want to use
   * to get Weather information
   * 
   * @return WeatherReturn object that contains all information about
   * the weather of the provided city.
   */
  @Override
  public WeatherReturn getCityWeatherByZIP(String zip) {
    Weather s = new Weather();
    WeatherSoap p = s.getWeatherSoap12();
    return p.getCityWeatherByZIP(zip);
  }

  /**
   * Allows you to get your City Forecast Over the Next 7 Days, which is 
   * updated hourly. U.S. Only
   * 
   * Delegates on _getCityForecastByZIP_ operation defined on the
   * SOAP web service.
   * 
   * @param zip String with the City's ZIP code that want to use
   * to get Forecast information
   * 
   * @return ForecastReturn object that contains the weather forecast over 
   * the next 7 days of the provided city 
   */
  @Override
  public ForecastReturn getCityForecastByZIP(String zip) {
    Weather s = new Weather();
    WeatherSoap p = s.getWeatherSoap12();
    return p.getCityForecastByZIP(zip);
  }


}
