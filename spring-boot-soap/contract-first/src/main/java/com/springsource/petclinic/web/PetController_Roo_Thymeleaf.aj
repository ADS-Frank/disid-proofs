// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.web;

import com.springsource.petclinic.datatables.DatatablesData;
import com.springsource.petclinic.datatables.DatatablesPageable;
import com.springsource.petclinic.domain.Pet;
import com.springsource.petclinic.reference.PetType;
import com.springsource.petclinic.repository.GlobalSearch;
import com.springsource.petclinic.web.PetController;
import java.util.Arrays;
import javax.validation.Valid;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

privileged aspect PetController_Roo_Thymeleaf {
    
    @RequestMapping(method = RequestMethod.GET, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.list(Model model) {
        return "pets/list";
    }
    
    @RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public Page<Pet> PetController.list(GlobalSearch search, Pageable pageable) {
        Page<Pet> pet = petService.findAll(search, pageable);
        return pet;
    }
    
    @RequestMapping(method = RequestMethod.GET, produces = "application/vnd.datatables+json")
    @ResponseBody
    public DatatablesData<Pet> PetController.list(GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        Page<Pet> pet = list(search, pageable);
        long allAvailablePet = petService.count();
        return new DatatablesData<Pet>(pet, allAvailablePet, draw);
    }
    
    @RequestMapping(value = "/create-form", method = RequestMethod.GET, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.createForm(Model model) {
        model.addAttribute(new Pet());
        populateForm(model);
        return "pets/create";
    }
    
    @RequestMapping(method = RequestMethod.POST, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.create(@Valid @ModelAttribute Pet pet, BindingResult result, RedirectAttributes redirectAttrs, Model model) {
        if (result.hasErrors()) {
            populateForm(model);
            return "pets/create";
        }
        Pet newPet = petService.save(pet);
        redirectAttrs.addAttribute("id", newPet.getId());
        return "redirect:/pets/{id}";
    }
    
    @RequestMapping(value = "/{pet}/edit-form", method = RequestMethod.GET, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.editForm(@PathVariable("pet") Pet pet, Model model) {
        populateForm(model);
        return "pets/edit";
    }
    
    @RequestMapping(value = "/{pet}", method = RequestMethod.PUT, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.update(@Valid @ModelAttribute Pet pet, BindingResult result, RedirectAttributes redirectAttrs, Model model) {
        if (result.hasErrors()) {
            populateForm(model);
            return "pets/edit";
        }
        Pet savedPet = petService.save(pet);
        redirectAttrs.addAttribute("id", savedPet.getId());
        return "redirect:/pets/{id}";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.delete(@PathVariable("id") Long id, Model model) {
        petService.delete(id);
        return "redirect:/pets";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public ResponseEntity PetController.delete(@PathVariable("id") Long id) {
        petService.delete(id);
        return new ResponseEntity(HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{pet}", method = RequestMethod.GET, produces = MediaType.TEXT_HTML_VALUE)
    public String PetController.show(@PathVariable("pet") Pet pet, Model model) {
        return "pets/show";
    }
    
    public void PetController.populateForm(Model model) {
        populateFomats(model);
        model.addAttribute("types", Arrays.asList(PetType.values()));
    }
    
    public void PetController.populateFomats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
}
