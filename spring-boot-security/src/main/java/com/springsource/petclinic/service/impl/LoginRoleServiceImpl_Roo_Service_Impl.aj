// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.service.impl;

import com.springsource.petclinic.domain.security.LoginRole;
import com.springsource.petclinic.repository.GlobalSearch;
import com.springsource.petclinic.repository.security.LoginRoleRepository;
import com.springsource.petclinic.service.api.LoginRoleService;
import com.springsource.petclinic.service.impl.LoginRoleServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LoginRoleServiceImpl_Roo_Service_Impl {
    
    declare parents: LoginRoleServiceImpl implements LoginRoleService;
    
    declare @type: LoginRoleServiceImpl: @Service;
    
    declare @type: LoginRoleServiceImpl: @Transactional(readOnly = true);
    
    public LoginRoleRepository LoginRoleServiceImpl.loginRoleRepository;
    
    @Autowired
    public LoginRoleServiceImpl.new(LoginRoleRepository loginRoleRepository) {
        this.loginRoleRepository = loginRoleRepository;
    }

    @Transactional(readOnly = false)
    public LoginRole LoginRoleServiceImpl.save(LoginRole entity) {
        return loginRoleRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void LoginRoleServiceImpl.delete(Long id) {
         loginRoleRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<LoginRole> LoginRoleServiceImpl.save(Iterable<LoginRole> entities) {
        return loginRoleRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void LoginRoleServiceImpl.delete(Iterable<Long> ids) {
        List<LoginRole> toDelete = loginRoleRepository.findAll(ids);
        loginRoleRepository.deleteInBatch(toDelete);
    }
    
    public List<LoginRole> LoginRoleServiceImpl.findAll() {
        return loginRoleRepository.findAll();
    }
    
    public List<LoginRole> LoginRoleServiceImpl.findAll(Iterable<Long> ids) {
        return loginRoleRepository.findAll(ids);
    }
    
    public LoginRole LoginRoleServiceImpl.findOne(Long id) {
        return loginRoleRepository.findOne(id);
    }
    
    public long LoginRoleServiceImpl.count() {
        return loginRoleRepository.count();
    }
    
    public Page<LoginRole> LoginRoleServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return loginRoleRepository.findAll(globalSearch, pageable);
    }
    
}
