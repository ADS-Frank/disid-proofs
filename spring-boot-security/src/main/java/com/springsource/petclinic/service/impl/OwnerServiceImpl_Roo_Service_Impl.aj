// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.service.impl;

import com.springsource.petclinic.domain.Owner;
import com.springsource.petclinic.repository.GlobalSearch;
import com.springsource.petclinic.repository.OwnerRepository;
import com.springsource.petclinic.service.api.OwnerService;
import com.springsource.petclinic.service.impl.OwnerServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect OwnerServiceImpl_Roo_Service_Impl {
    
    declare parents: OwnerServiceImpl implements OwnerService;
    
    declare @type: OwnerServiceImpl: @Service;
    
    declare @type: OwnerServiceImpl: @Transactional(readOnly = true);
    
    public OwnerRepository OwnerServiceImpl.ownerRepository;
    
    @Autowired
    public OwnerServiceImpl.new(OwnerRepository ownerRepository) {
        this.ownerRepository = ownerRepository;
    }

    @Transactional(readOnly = false)
    public Owner OwnerServiceImpl.save(Owner entity) {
        return ownerRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void OwnerServiceImpl.delete(Long id) {
         ownerRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Owner> OwnerServiceImpl.save(Iterable<Owner> entities) {
        return ownerRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void OwnerServiceImpl.delete(Iterable<Long> ids) {
        List<Owner> toDelete = ownerRepository.findAll(ids);
        ownerRepository.deleteInBatch(toDelete);
    }
    
    public List<Owner> OwnerServiceImpl.findAll() {
        return ownerRepository.findAll();
    }
    
    public List<Owner> OwnerServiceImpl.findAll(Iterable<Long> ids) {
        return ownerRepository.findAll(ids);
    }
    
    public Owner OwnerServiceImpl.findOne(Long id) {
        return ownerRepository.findOne(id);
    }
    
    public long OwnerServiceImpl.count() {
        return ownerRepository.count();
    }
    
    public Page<Owner> OwnerServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return ownerRepository.findAll(globalSearch, pageable);
    }
    
}
